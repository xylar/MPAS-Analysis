[runs]
## options related to the run to be analyzed and reference runs to be
## compared against

# mainRunName is a name that identifies the simulation being analyzed.
mainRunName = noEAmelt

# config file for a control run to which this run will be compared.  The
# analysis should have already been run to completion once with this config
# file, so that the relevant MPAS climatologies already exist and have been
# remapped to the comparison grid.  Leave this option commented out if no
# control run is desired.
# controlRunConfigFile = /path/to/config/file

# config file for a main run on which the analysis was already run to
# completion.  The relevant MPAS climatologies already exist and have been
# remapped to the comparison grid and time series have been extracted.
# Leave this option commented out if the analysis for the main run should be
# performed.
# mainRunConfigFile = /path/to/config/file

[execute]
## options related to executing parallel tasks

# the number of parallel tasks (1 means tasks run in serial, the default)
parallelTaskCount = 12

# the parallelism mode in ncclimo ("serial" or "bck")
# Set this to "bck" (background parallelism) if running on a machine that can
# handle 12 simultaneous processes, one for each monthly climatology.
ncclimoParallelMode = bck

[diagnostics]
## config options related to observations, mapping files and region files used
## by MPAS-Analysis in diagnostics computations.

# The base path to the diagnostics directory.  Typically, this will be a shared
# directory on each E3SM supported machine (see the example config files for
# its location).  For other machines, this would be the directory pointed to
# when running "download_analysis_data.py" to get the public observations,
# mapping files and region files.
baseDirectory = /global/cfs/cdirs/e3sm/diagnostics

# A second directory where custom diagonstics data such as mapping files and
# regions masks for unsupported grids can be found.  The structure of
# subdirectories in this directory must be the same as baseDirectory
customDirectory = /global/cfs/cdirs/e3sm/xylar/diagnostics_not_public

[input]
## options related to reading in the results to be analyzed

# directory containing model results
baseDirectory = /project/projectdirs/m3412/simulations/20190423.GMPAS-DIB-IAF-ISMF.T62_oEC60to30v3wLI.edison.restrictedMelt

# subdirectory containing restart files
runSubdirectory = run
# subdirectory for ocean history files
oceanHistorySubdirectory = ocn/hist
# subdirectory for sea ice history files
seaIceHistorySubdirectory = ice/hist

# names of ocean and sea ice meshes (e.g. oEC60to30v3, oQU240v3, oRRS30to10v3, etc.)
mpasMeshName = oEC60to30v3wLI

# names of namelist and streams files, either a path relative to baseDirectory
# or an absolute path.
oceanNamelistFileName = run/mpaso_in
oceanStreamsFileName = run/streams.ocean
seaIceNamelistFileName = run/mpassi_in
seaIceStreamsFileName = run/streams.seaice

[output]
## options related to writing out plots, intermediate cached data sets, logs,
## etc.

# directory where analysis should be written
baseDirectory = /project/projectdirs/m3412/simulations/xylar_mpas-analysis-output/hoffman_et_al_2021/weddell_regions/20190423.GMPAS-DIB-IAF-ISMF.T62_oEC60to30v3wLI.edison.restrictedMelt

# provide an absolute path to put HTML in an alternative location (e.g. a web
# portal)
# htmlSubdirectory = /global/cfs/cdirs/e3sm/www/USERNAME/RUNNAME
htmlSubdirectory = /project/projectdirs/m3412/www/xylar/hoffman_et_al_2021/weddell_regions/noEAmelt


# a list of analyses to generate.  Valid names can be seen by running:
#   ./run_mpas_analysis --list
# This command also lists tags for each analysis.
# Shortcuts exist to generate (or not generate) several types of analysis.
# These include:
#   'all' -- all analyses will be run
#   'all_<tag>' -- all analysis with a particular tag will be run
#   'all_<component>' -- all analyses from a given component (either 'ocean'
#                        or 'seaIce') will be run
#   'only_<component>', 'only_<tag>' -- all analysis from this component or
#                                       with this tag will be run, and all
#                                       analysis for other components or
#                                       without the tag will be skipped
#   'no_<task_name>' -- skip the given task
#   'no_<component>', 'no_<tag>' -- in analogy to 'all_*', skip all analysis
#                                   tasks from the given compoonent or with
#                                   the given tag.  Do
#                                      ./run_mpas_analysis --list
#                                   to list all task names and their tags
# an equivalent syntax can be used on the command line to override this
# option:
#    ./run_mpas_analysis config.analysis --generate \
#         all,no_ocean,all_timeSeries
# All tasks with tag "BGC", "icebergs", "index", and "eke" are disabled because this run
# did not include BGC or icebergs, the EKE analysis member was off and the El Nino analysis
# is not meaningful (SSTs are prescribed).
generate = ['timeSeriesOceanRegions']

[climatology]
## options related to producing climatologies, typically to compare against
## observations and previous runs

# the first year over which to average climatalogies
startYear = 51
# the last year over which to average climatalogies
endYear = 80

[timeSeries]
## options related to producing time series plots, often to compare against
## observations and previous runs

# start and end years for timeseries analysis. Use endYear = end to indicate
# that the full range of the data should be used.  If errorOnMissing = False,
# the start and end year will be clipped to the valid range.  Otherwise, out
# of bounds values will lead to an error.  In a "control" config file used in
# a "main vs. control" analysis run, the range of years must be valid and
# cannot include "end" because the original data may not be available.
startYear = 1
endYear = end

[index]
## options related to producing nino index.

# start and end years for El Nino 3.4 analysis. Use endYear = end to indicate
# that the full range of the data should be used.  If errorOnMissing = False,
# the start and end year will be clipped to the valid range.  Otherwise, out
# of bounds values will lead to an error.  In a "control" config file used in
# a "main vs. control" analysis run, the range of years must be valid and
# cannot include "end" because the original data may not be available.
startYear = 1
endYear = end


[timeSeriesOceanRegions]
## options related to plotting time series of groups of ocean regions

# the names of region groups to plot, each with its own section below
regionGroups = ['Weddell Shelf Regions']


[timeSeriesWeddellShelfRegions]
## options related to plotting time series of Antarctic regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['all']

# a list of variables to plot
variables = [{'name': 'temperature',
              'title': 'Temperature',
              'units': r'$^\circ$C',
              'mpas': 'timeMonthly_avg_activeTracers_temperature'},
             {'name': 'salinity',
              'title': 'Salinity',
              'units': 'PSU',
              'mpas': 'timeMonthly_avg_activeTracers_salinity'},
             {'name': 'potentialDensity',
              'title': 'Potential Density',
              'units': 'kg m$^{-3}$',
              'mpas': 'timeMonthly_avg_potentialDensity'},
             {'name': 'mixedLayerDepth',
              'title': 'Mixed Layer Depth',
              'units': 'm',
              'mpas': 'timeMonthly_avg_dThreshMLD'}]

# The minimum and maximum depth over which fields are averaged, default is
# to take these values from the geojson feature's zmin and zmax properties.
# Add these to a custom config file to override the defaults.
zmin = -1000
zmax = -200

# Observational data sets to compare against
obs = ['SOSE', 'WOA18']

